{

    // the most important settings are put first here

	"update.enableWindowsBackgroundUpdates": false,
	"update.mode": "manual",
	//"update.mode": "manual", because f8
	//"update.enableWindowsBackgroundUpdates": false,

	// ~nozaki
	//"extensions.autoUpdate": false,
    //"extensions.autoCheckUpdates": false,
	"extensions.autoUpdate": false,
    "extensions.autoCheckUpdates": false,

    //"terminal.integrated.rightClickBehavior": "default",
    "terminal.integrated.rightClickBehavior": "selectWord",
    // 224
    // Controls how terminal reacts to right click.
	//  - default: Show the context menu.
	//  - copyPaste: Copy when there is a selection, otherwise paste.
	//  - paste: Paste on right click.
	//  - selectWord: Select the word under the cursor and show the context menu.
	//  - nothing: Do nothing and pass event to terminal.

	"terminal.integrated.enableMultiLinePasteWarning": true,
	//"terminal.integrated.enableMultiLinePasteWarning": true,





    "workbench.colorCustomizations": {
        "editorError.foreground":   "#ff000018", // "#ff000088",
        "editorWarning.foreground": "#ffe600f8",
        "editorInfo.foreground":    "#00ff00f8"
    },


	// Insert spaces when pressing `Tab`. This setting is overridden based on the file contents when `editor.detectIndentation` is on.
	"editor.insertSpaces": false,   // true,


    "editor.detectIndentation": false,   // true,

    "[python]": {

        "editor.detectIndentation": false,
        "editor.insertSpaces": true,
        "editor.tabSize": 4,

    },



    //warning: CRLF will be replaced by LF in AppData/Roaming/Code/User/settings.json.
    // uz jsem to pridal do git

    "files.eol": "\n",
    "files.trimTrailingWhitespace": true,
    "files.autoSave": "afterDelay",
    "git.path": "C:/Program Files/Git/cmd/git.exe",
    "files.associations": {
		"*.w": "scheme",
		"*.sbcl_history": "clojure",
		"*.opt2": "shellscript",
		".zsh_history": "shellscript",
		"*.zsh_history": "shellscript",
		"*.hist*": "shellscript",
		".sqlite_history": "sql",
		"*.opt0": "shellscript",
		".wslconfig": "properties",
		"*.sw": "clojure",
		"*.art": "clojure",
		"*.r": "clojure",
		"*.tcl": "perl6",
		"*.factor": "clojure",
		"*.gram": "javascript",
		"*.ohayo": "javascript",
		"*.sh-session": "shellscript",
		"*.tasker": "ini",
		"*.sage": "python",
		"*.ahk": "ini",
		"*.mac": "javascript"
	},


    "[json]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascript]": {

        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "editor.cursorBlinking": "solid",
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    "terminal.integrated.profiles.windows": {
        "PowerShell": {
            "source": "PowerShell",
            "icon": "terminal-powershell"
        },
        "Command Prompt": {
            "path": [
                "${env:windir}\\Sysnative\\cmd.exe",
                "${env:windir}\\System32\\cmd.exe"
            ],
            "args": [],
            "icon": "terminal-cmd"
        },
        "Git Bash": {
            "source": "Git Bash"
        },
        "C:\\WINDOWS\\System32\\wsl.exe (migrated)": {
            "path": "C:\\WINDOWS\\System32\\wsl.exe",
            "args": []
        },
        "Windows PowerShell": {
            "path": "C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"
        }
    },
    "javascript.suggest.completeFunctionCalls": true,
    "python.autoComplete.addBrackets": true,
    "powershell.promptToUpdatePowerShell": false,
    "files.exclude": {
		"**/.git": true,
		"**/.svn": true,
		"**/.hg": true,
		"**/CVS": true,
		"**/.DS_Store": true,
		"**/Thumbs.db": true,
		"**/*.olean": true,
		"**/node_modules": true,
		"out": false
	},
    "spellright.documentTypes": [

        "markdown",
        "latex",
        //"plaintext"
    ],
    "spellright.ignoreFiles": [

        "**/.gitignore",
        "**/.spellignore"
    ],
    "spellright.ignoreRegExps": [

    ],
    "spellright.ignoreRegExpsByClass": {

    },

    "spellright.language": [
        "en",
        "cs",
    ],

    "spellright.languageContext": {

    },
    "spellright.recheckOnSave": false,
    "markdown.extension.toc.updateOnSave": false,   // to be lightweight
    "markdown.extension.toc.omittedFromToc": {

    },

    "editor.wordWrap": "on",

    "editor.quickSuggestions": {
        "other": true,
        "comments": true, // false,
        "strings": true, //false
    },

    "[markdown]": {

		"files.trimTrailingWhitespace": false,  // hard line breaks

        "editor.wordWrap": "on",
        "editor.quickSuggestions":  {
            "other": true,
            "comments": true, // false,
            "strings": true, //false
        },
    },
    "python.analysis.completeFunctionParens": true,
    "githubPullRequests.createOnPublishBranch": "never",
    "editor.unicodeHighlight.invisibleCharacters": false,
    // ??

    "bashIde.globPattern": "**/*@(.sh|.inc|.bash|.command|.hist)",
    "bashIde.highlightParsingErrors": true,
    "[jsonc]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "workbench.commandPalette.preserveInput": true,
    //"workbench.commandPalette.preserveInput": true,
    /////////"git.enableSmartCommit": true


	// Controls the font family of the terminal, this defaults to `editor.fontFamily`'s value.
	//"terminal.integrated.fontFamily": "'cascadia mono','cascadia code'",
	"terminal.integrated.fontFamily": "consolas,'cascadia mono','cascadia code'",

    // emacs Courier New



    "editor.fontFamily": "'segoe ui',CcfSymbolFont_ASEMTOG_F700,calibri,'Lucida sans','Lucida sans unicode',Arial,'microsoft sans serif',Consolas, 'Courier New', monospace",
    "diffEditor.ignoreTrimWhitespace": false,

    //"terminal.integrated.automationProfile.osx": {    },

    "tabnine.experimentalAutoImports": true,
    "python.condaPath": "D:\\conda\\Library\\bin\\conda.bat",
    "python.defaultInterpreterPath": "D:\\conda\\python.exe",
	"python.languageServer": "Pylance",


    "powershell.integratedConsole.showOnStartup": false,
	"redhat.telemetry.enabled": true,




	// 1000
	// Controls the maximum amount of lines the terminal keeps in its buffer.
	"terminal.integrated.scrollback": 10000,
	"runme.shell.closeTerminalOnSuccess": false,
	"git.openRepositoryInParentFolders": "never",
	"workbench.panel.defaultLocation": "right",
	"terminal.integrated.tabs.focusMode": "singleClick",
	"cSpell.enableFiletypes": [
		"!markdown"
	],
	"code-runner.executorMap": {

		"javascript": "node",
		"java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
		"c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
		"zig": "zig run",
		"cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
		"objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
		"php": "php",
		"python": "python -u",
		"perl": "perl",
		"perl6": "perl6",
		"ruby": "ruby",
		"go": "go run",
		"lua": "lua",
		"groovy": "groovy",
		"powershell": "powershell -ExecutionPolicy ByPass -File",
		"bat": "cmd /c",
		"shellscript": "bash",
		"fsharp": "fsi",
		"csharp": "scriptcs",
		"vbscript": "cscript //Nologo",
		"typescript": "ts-node",
		"coffeescript": "coffee",
		"scala": "scala",
		"swift": "swift",
		"julia": "julia",
		"crystal": "crystal",
		"ocaml": "ocaml",
		"r": "Rscript",
		"applescript": "osascript",
		"clojure": "lein exec",
		"haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
		"rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
		"racket": "racket",
		"scheme": "csi -script",
		"ahk": "autohotkey",
		"autoit": "autoit3",
		"dart": "dart",
		"pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
		"d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
		"haskell": "runghc",
		"nim": "nim compile --verbosity:0 --hints:off --run",
		"lisp": "sbcl --script",
		"kit": "kitc --run",
		"v": "v run",
		"sass": "sass --style expanded",
		"scss": "scss --style expanded",
		"less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
		"FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
		"fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
		"fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
		"fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
		"sml": "cd $dir && sml $fileName",
		"mojo": "mojo run",
		"erlang": "escript",
		"spwn": "spwn build",
		"pkl": "cd $dir && pkl eval -f yaml $fileName -o $fileNameWithoutExt.yaml",
		"gleam": "gleam run -m $fileNameWithoutExt"
	},
	"dotnet-interactive.kernelTransportArgs": [

		"{dotnet_path}",
		"tool",
		"run",
		"dotnet-interactive",
		"--",
		"[vscode]",
		"stdio",
		"--working-dir",
		"{working_dir}"
	],
	"dotnet-interactive.notebookParserArgs": [

		"{dotnet_path}",
		"tool",
		"run",
		"dotnet-interactive",
		"--",
		"notebook-parser"
	],
	"polyglot-notebook.defaultNotebookExtension": ".dib",
	"polyglot-notebook.defaultNotebookLanguage": "pwsh",
	"easy-extensibility.dateCommand.windows": "cmd /c date /T",
	"window.zoomLevel": 1,




    // db
    // ## pgm --help -help -h -e -l -p -- :;.,$&O01lI"''`--
    // Capital-i Illustr ss01
    // omlouvám se za opožděné přání všeho nejlepšího k narozeninám ... (chtěl jsem to říct ten den, kdy jste u nás byli na návštěvě, ale večer už nějak nebyla příležitost)
    // The significance of withdrawal symptoms Withdrawal symptoms are not inconsequential – they indicate the nervous system is becoming destabilized,24,56,57 accounting for the variety and variability of symptoms.27 According to established pharmacological principles, chronic application of any psychotropic brings about neurophysiological processes: adaption, tolerance, and potential dependence with withdrawal upon reduction of the


    // unknown configuration setting: languages

    // onedr

}

// https://github.com/martin12333/marti-onedrive/blob/main2/tar-exe/c/Users/marti/AppData/Roaming/Code/User/settings.json

    // exists f1 default settings
